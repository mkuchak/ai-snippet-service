name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [back-end, front-end]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: '${{ matrix.service }}/pnpm-lock.yaml'

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          pnpm install --frozen-lockfile

      - name: Run lint
        run: |
          cd ${{ matrix.service }}
          pnpm lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'back-end/pnpm-lock.yaml'

      - name: Install dependencies
        run: |
          cd back-end
          pnpm install --frozen-lockfile

      - name: Run tests
        run: |
          cd back-end
          pnpm test:run

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [lint, test]
    strategy:
      matrix:
        service: [back-end, front-end]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: false
          tags: |
            ai-snippet-${{ matrix.service }}:latest
            ai-snippet-${{ matrix.service }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    
    steps:
      - name: Check build status
        run: |
          if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All CI steps passed successfully!"
            exit 0
          else
            echo "❌ CI pipeline failed"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Test: ${{ needs.test.result }}"
            echo "Build: ${{ needs.build.result }}"
            exit 1
          fi 